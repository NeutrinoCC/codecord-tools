{
  "error": {
    "configFileDoesNotExist": "The file \"{path}\" does not exist.",
    "errorOnConfigFileRead": "An error ocurred trying to read configuration:\n{error}",
    "noToken": "Please assign a token to your bot.",
    "base64Id": "Cannot parse the client base64 id from your token, please check if it's correct.",
    "clientConnectionFailed": "Couldn't connect to discord:\n{error}",
    "clientDisconnectionFailed": "Couldn't kill the bot instance, shutting down."
  },
  "warn": {
    "commandRegisterError": "An error ocurred on command register:\n{error}",
    "noCommandFound": "No command found: /{command}",
    "noCommandExecutionAssigned": "No command execution assigned for /{command}",
    "commandExecution": "An error ocurred on /{command} execution:\n{error}",
    "noInteractionExecutionFound": "No function found for interaction: {interaction}",
    "interactionExecution": "An error ocurred on {interaction}:\n{error}",
    "requireFileError": "An error ocurred trying to access the contents of {file}:\n{error}"
  },
  "bot": {
    "interaction": {
      "command": "@{username} (id@{userId}) used /{command}",
      "component": "{type} {username} interacted with {customId}"
    },
    "event": {
      "listen": "{eventLength} listeners assigned to \"{eventName}\"."
    },
    "start": {
      "first": "Recieved invoke instruction, creating new bot...",
      "config": "Bot config:\n{config}",
      "client": "Creating new instance of DiscordJS client...",
      "files": "Loading files...",
      "readPath": "Reading path: {path}",
      "foundFile": "> Reading contents of {file}",
      "fileInstance": "\t- ContentType: {instance}",
      "fileAbsolutePath": "\t- Absolute Path: {path}",
      "commandRegister": "Registering commands...",
      "commandRegisterReport": "Registered {amount} slash commands {/} to the discord API in {delay}ms.",
      "interactionHandler": "Setting up interaction handler...",
      "eventListeners": "Starting event listening...",
      "commandsReport": "Loaded {total} commands:\n{list}",
      "interactionsReport": "Loaded {total} interactions:\n{list}",
      "eventsReport": "Loaded {total} events:\n{list}",
      "end": "Bot created successfully.",
      "logging": "Connecting...",
      "connected": "Connected as {username}"
    },
    "disconnect": "Recieved kill function.",
    "disconnected": "Disconnected."
  }
}
